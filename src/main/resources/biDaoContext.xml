<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-autowire="byName">


    <context:property-placeholder location="classpath:conf/${profile.env.name}.properties"/>





    <bean id="druidDataSource" abstract="true" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${dc.jdbc.initialPoolSize}"/>
        <property name="minIdle" value="${dc.jdbc.minPoolSize}"/>
        <property name="maxActive" value="${dc.jdbc.maxPoolSize}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="1800"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- mysql SELECT 'x'  Oracle: SELECT 1 FROM DUAL -->
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 wall=防火墙 -->
        <property name="filters" value="stat"/>
        <property name="connectionProperties"
                  value="druid.stat.slowSqlMillis=10000;config.decrypt=false"/><!-- 慢SQL标准 -->
        <property name="removeAbandoned" value="true"/> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800"/> <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true"/> <!-- 关闭abanded连接时输出错误日志 -->
    </bean>



    <bean id="17DS" parent="druidDataSource">
        <property name="url" value="${dc.jdbc.url.17}"/>
        <property name="username" value="${dc.jdbc.username.17}"/>
        <property name="password" value="${dc.jdbc.password.17}"/>
        <property name="driverClassName" value="${dc.jdbc.driver.bi}"/>


    </bean>

    <bean id="18DS" parent="druidDataSource">
        <property name="url" value="${dc.jdbc.url.18}"/>
        <property name="username" value="${dc.jdbc.username.18}"/>
        <property name="password" value="${dc.jdbc.password.18}"/>
        <property name="driverClassName" value="${dc.jdbc.driver.bi}"/>
    </bean>


    <bean id="biDS" class="com.zhangC.db.DynamicBizDataSource">
        <property name="defaultTargetDataSource" ref="17DS"/>
        <property name="targetDataSources">
            <map>
                <entry key="10.10.1.17" value-ref="17DS"/>
                <entry key="10.10.1.18" value-ref="18DS"/>
            </map>
        </property>
    </bean>


    <bean id="biSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="biDS"/>
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="mapperLocations" value="classpath:sql/*.xml"/>
    </bean>

    <bean id="biScan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhangC.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="biSqlSessionFactory"/>
    </bean>

    <!--&lt;!&ndash;事务管理器类&ndash;&gt;-->
    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="biDS"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;注解方式实现事务&ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
</beans>


